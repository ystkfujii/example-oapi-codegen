name: CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Build application
      run: go build -v ./...

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  #security:
  #  runs-on: ubuntu-latest
  #  
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
  #      with:
  #        persist-credentials: false
  #
  #    - name: Run Trivy vulnerability scanner in fs mode
  #      uses: aquasecurity/trivy-action@0.31.0
  #      with:
  #        scan-type: 'fs'
  #        scan-ref: '.'
  #        format: 'table'
  #        exit-code: '1'
  #        ignore-unfixed: true
  #        severity: 'CRITICAL,HIGH'

  code-generation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install oapi-codegen
      run: go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest

    - name: Generate OpenAPI code
      run: make generate

    - name: Check for changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Generated code is out of sync. Please run 'make generate' and commit the changes."
          git diff
          exit 1
        fi
